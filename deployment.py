import streamlit as st
import pandas as pd
import numpy as np
import joblib
import json
from dsp_project_eog import process 
from streamlit_option_menu import option_menu # type: ignore
import streamlit_lottie as st_lottie # type: ignore

st.set_page_config(
    page_title='EOG movement Prediction',
    page_icon="music.png",
    initial_sidebar_state='collapsed'
)

def get(path:str): # test url if you want to use your own lottie file 'valid url' or 'invalid url'
    with open(path,"r") as p:
        return json.load(p)

z = r"C:\EOG_Project\DSP project\Animation - 1734985376010.json"
ann=get(z)


model = joblib.load("drop")  
acc1 = joblib.load("accur1") 

with st.sidebar:
     
  choose = option_menu(None , ["Home","About" , "Contact","Graph"] ,
                        icons = ['house' ,'book' ,'person lines fill'],
                        menu_icon="app-indicator", default_index=0 ,
                        styles = {
                                    "container" :{"padding":"5!important " , "background-color":"#fafafa"},


                                     "icon":{"color":"#E0E0E0EF" , "font-size" :"25px"},


                                     "nav-link":{"font-size":"16px" , "text-align" : "left" ,"margin":"0px" , "--hover-color " :"#eee" },

                                     "nav-link-selected ":{"background-color":"#808080"},
                        }
 
                    )
  
if choose=='Home':
    st.title("EOG movement Prediction")
    st.lottie(animation_source=ann, height=200, width=250)
    st.write(f"Random Forest Model Accuracy: {acc1:.2f}")
    uploaded_file = st.file_uploader("Upload your file", type=["csv", "txt"])
    def process_uploaded_file(uploaded_file, num): 
        if uploaded_file is not None:
            try:
                df = pd.read_csv(uploaded_file, sep='\t', header=None) 
                num = int(num)
                if 0 <= num < len(df):
                    return df.iloc[num].values.reshape(1, -1) 
                else:
                    st.error(f"The row index {num} is out of bounds. Available rows: 0 to {len(df)-1}.")
                    return None
            except Exception as e:
                st.error(f"Error reading file: {e}")
                return None
        return None 


    def predict(datawave):
        predection=model.predict(datawave)
        return predection


    
    if uploaded_file is not None:
        num = st.number_input("Enter The Row Number:", min_value=0, max_value=14, step=1)
        data = process_uploaded_file(uploaded_file,num)
        if data is not None:
            st.write('# EOG movement Prediction')
            st.write('-------------------------')
            st.write("Uploaded data:")
            st.write(data)

            processed_data = process(data)  

            if processed_data.shape[0] == 1:
                if st.button("Get the Result"): 
                    prediction = predict(processed_data) 
                    if prediction is not None:
                        if prediction=="right":  
                            st.write("Prediction: Right")
                        elif prediction[0] == "left":  
                            st.write("Prediction: Left")
            else:
                st.error("Please upload a file with exactly one data point for prediction.")



elif choose == 'About':
    st.title("About Us")
    st.write(
        """
        Amyotrophic lateral sclerosis (ALS) patients often rely on eye movement to communicate with the world due to paralysis of their voluntary muscles. 
        To support this method of communication, extensive research has been conducted to track and detect eye movements effectively.

        Electro-oculogram (EOG) is an electrophysiological signal generated by eye movement. It is measured using electrodes strategically placed around the eyes, 
        typically on the forehead. These electrodes capture two distinct channels: one arranged horizontally and the other vertically. 
        Each eye movement produces a characteristic positive or negative peak in the corresponding EOG signal.

        A human-machine interface (HMI) can be developed using EOG signals to recognize eye movements. Such interfaces empower individuals with ALS and 
        other paralyzing conditions to interact with smartphones, laptops, or other devices. These systems can also enable them to control wheelchairs, 
        play games, or perform various tasks independently.

        In this project, we aim to recognize and distinguish between left and right eye movements using horizontal EOG signals, 
        paving the way for more accessible and inclusive technology solutions.
        """
    )

elif choose=='Graph':
    st.title("Train preprocessing Graph")
    st.image("output.png")
    st.title("Test preprocessing Graph")
    st.image("output2.png")


elif choose=='Contact':
      st.title("Contact Us")
      with st.form(key='columns_in_form2',clear_on_submit=True):
          st.write('##Please Help us to improve')
          name=st.text_input(label='Enter your Name')
          email=st.text_input(label='Enter your Email')
          message=st.text_input(label='Enter your Message')
          submitted=st.form_submit_button('Submit')
          if submitted:
              st.write('Thanks for your feedback .We are committed to improving .Stay tuned for updates.')